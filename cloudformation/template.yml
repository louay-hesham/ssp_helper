AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS CloudFormation template for SSP Helper web app
Resources:

  BylawsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Year
          AttributeType: S
      BillingMode: PROVISIONED
      KeySchema:
        - AttributeName: Year
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: Bylaws

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Policies:
        - PolicyName: "lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/BylawsInfoReaderLambda:*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/BylawUploaderLambda:*"
      RoleName: LambdaRole


  BylawsInfoReaderLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BylawsInfoReaderLambda
      Handler: index.lambda_handler
      Runtime: python3.7
      InlineCode: |
%BylawsInfoReaderPlaceholder%
      Role: !GetAtt LambdaRole.Arn
      Events:
        APIG:
          Type: Api
          Properties:
            Method: ANY
            Path: /GetBylaws
            RestApiId: !Ref SspHelperApi

  BylawUploaderLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BylawUploaderLambda
      Handler: index.lambda_handler
      Runtime: python3.7
      InlineCode: |
%BylawUploaderPlaceholder%
      Role: !GetAtt LambdaRole.Arn
      Events:
        APIG:
          Type: Api
          Properties:
            Method: ANY
            Path: /SubmitBylaw
            RestApiId: !Ref SspHelperApi

  SspHelperApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: SspHelperApi
      StageName: prod
      Cors:
        AllowHeaders: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Access-Control-Allow-Headers,Access-Control-Allow-Methods,Content-Type,Bylaw-Year'"
        AllowMethods: "'*'"
        AllowOrigin: "'http://louay-morsi.me'"

  SspHelperApiDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref SspHelperApi

  SspHelperApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref SspHelperApi
      DeploymentId: !Ref SspHelperApiDeployment

  SspHelperApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: ssp-helper-ui
      Enabled: true
      StageKeys:
        - RestApiId: !Ref SspHelperApi
          StageName: !Ref SspHelperApiStage
